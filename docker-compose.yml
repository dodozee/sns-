version: "3"

services:
#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"
#    networks:
#      justpickup-network:
#        ipv4_address: 172.18.0.100
#  kafka:
#    image: wurstmeister/kafka:2.12-2.3.0
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: 172.18.0.101
#      KAFKA_CREATE_TOPICS: "test:1:1"
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    depends_on:
#      - zookeeper
#    networks:
#      - withsports-network

#  zipkin:
#    container_name: zipkin
#    image: openzipkin/zipkin
#    ports:
#      - "9411:9411"
#    networks:
#      - withsports-network

  discovery:
    container_name: discovery
    build:
      context: ./discovery-service/
      dockerfile: Dockerfile
    ports:
      - 8761:8761
    networks:
      - withsports-network

#  owner-gateway:
#    container_name: owner-gateway
#    build:
#      context: ./owner-apigateway-service/
#      dockerfile: Dockerfile
#    ports:
#      - 8001:8001
#    networks:
#      - with-sports-network
#    environment:
#      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
#      - spring.zipkin.base-url=http://zipkin:9411
#    depends_on:
#      - discovery

  api-gateway:
    container_name: api-gateway
    build:
      context: ./apigateway-service/
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    networks:
      - withsports-network
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
#      - spring.zipkin.base-url=http://zipkin:9411
    depends_on:
      - discovery
#  config:
#    container_name: config
#    build:
#      context: ./config-service/
#      dockerfile: Dockerfile
#    ports:
#      - 8888:8888
#    networks:
#      - withsports-network

#  mysql-db:
#    container_name: mysql
#    build:
#      context: ./postgres_data/
#      dockerfile: Dockerfile
#    ports:
#      - 3306:3306
#    networks:
#      - withsports-network

  mysql:
    # 컨테이너명 설정
    container_name: mysql
    # 사용할 이미지
    image: mysql:8
    # 컨테이너 실행 시 재시작
    restart: always
    # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
    ports:
      - 3306:3306
    # 환경 변수 설정
    environment:
#      MYSQL_DATABASE: userdb
      MYSQL_ROOT_PASSWORD: 12341234
      TZ: Asia/Seoul
    # 명렬어 설정
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    # 볼륨 설정
    volumes:
      - ./data/mysql/:/var/lib/mysql
    # 네트워크 설정
    networks:
      - withsports-network

  redis:
    container_name: redis
    image: redis:alpine
    command: redis-server --port 6379
    hostname: redis_boot
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - 6379:6379
    networks:
      - withsports-network

  user-service:
    container_name: user
    build:
      context: ./user-service/
      dockerfile: Dockerfile
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
#      - spring.config.import=optional:configserver:http://config:8888
      - spring.datasource.url=jdbc:mysql://mysql:3306/mysql?useSSL=false
      - spring.redis.host=redis
#      - spring.zipkin.base-url=http://zipkin:9411
    depends_on:
      - discovery
#      - config
      - mysql
      - redis
    restart: always
    networks:
      - withsports-network


networks:
  withsports-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
#          gateway: 172.18.0.1


